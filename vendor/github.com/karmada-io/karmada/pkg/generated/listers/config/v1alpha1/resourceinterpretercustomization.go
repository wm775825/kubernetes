// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/karmada-io/karmada/pkg/apis/config/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ResourceInterpreterCustomizationLister helps list ResourceInterpreterCustomizations.
// All objects returned here must be treated as read-only.
type ResourceInterpreterCustomizationLister interface {
	// List lists all ResourceInterpreterCustomizations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ResourceInterpreterCustomization, err error)
	// Get retrieves the ResourceInterpreterCustomization from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ResourceInterpreterCustomization, error)
	ResourceInterpreterCustomizationListerExpansion
}

// resourceInterpreterCustomizationLister implements the ResourceInterpreterCustomizationLister interface.
type resourceInterpreterCustomizationLister struct {
	indexer cache.Indexer
}

// NewResourceInterpreterCustomizationLister returns a new ResourceInterpreterCustomizationLister.
func NewResourceInterpreterCustomizationLister(indexer cache.Indexer) ResourceInterpreterCustomizationLister {
	return &resourceInterpreterCustomizationLister{indexer: indexer}
}

// List lists all ResourceInterpreterCustomizations in the indexer.
func (s *resourceInterpreterCustomizationLister) List(selector labels.Selector) (ret []*v1alpha1.ResourceInterpreterCustomization, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ResourceInterpreterCustomization))
	})
	return ret, err
}

// Get retrieves the ResourceInterpreterCustomization from the index for a given name.
func (s *resourceInterpreterCustomizationLister) Get(name string) (*v1alpha1.ResourceInterpreterCustomization, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("resourceinterpretercustomization"), name)
	}
	return obj.(*v1alpha1.ResourceInterpreterCustomization), nil
}
